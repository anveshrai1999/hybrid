import 'package:flutter/material.dart';
import 'package:quiz_app_hybrid_lab/question.dart';
import 'package:quiz_app_hybrid_lab/questions.dart';

void main() {
  runApp(MyApp());
}

class MyApp extends StatefulWidget {
  @override
  _MyAppState createState() => _MyAppState();
}

class _MyAppState extends State<MyApp> {
  int questionNumber = 0;
  int currentScore = 0;
  Questions questions = Questions();

  void updateQ() {
    setState(() {
      questionNumber = questionNumber + 1;
    });
  }

  bool checkQ(int questionNumber) {
    return questionNumber < questions.questionBank.length ? true : false;
  }

  void updateScore(bool choice, int questionNumber) {
    if (questions.questionBank.length == questionNumber) {
      print('End of the Questions');
    } else {
      if (questions.questionBank[questionNumber].answer == choice) {
        setState(() {
          currentScore = currentScore + 1;
        });
      }
    }
  }

  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      home: SafeArea(
        child: Scaffold(
          body: Container(
            margin: EdgeInsets.all(10),
            padding: EdgeInsets.all(10),
            child: Column(
              crossAxisAlignment: CrossAxisAlignment.stretch,
              children: [
                Center(
                  child: Text(
                    checkQ(questionNumber)
                        ? questions.questionBank[questionNumber].questionText
                            .toString()
                        : "End",
                    style: TextStyle(fontSize: 40.0),
                  ),
                ),
                SizedBox(
                  height: 10,
                ),
                RaisedButton(
                  child: Text(
                    'TRUE',
                    style: TextStyle(fontSize: 20),
                  ),
                  onPressed: () {
                    setState(() {
                      if (questions.questionBank.length == questionNumber) {
                        print('End of the Questions');
                      } else {
                        updateScore(true, questionNumber);
                        updateQ();
                      }
                    });
                  },
                ),
                SizedBox(
                  height: 10,
                ),
                RaisedButton(
                  child: Text(
                    'FALSE',
                    style: TextStyle(fontSize: 20),
                  ),
                  onPressed: () {
                    setState(() {
                      setState(() {
                        if (questions.questionBank.length == questionNumber) {
                          print('End of the Questions');
                        } else {
                          updateScore(false, questionNumber);
                          updateQ();
                        }
                      });
                    });
                  },
                ),
                SizedBox(
                  height: 40,
                ),
                Center(
                  child: Text(
                    'Current Score is',
                    style: TextStyle(color: Colors.blue, fontSize: 25),
                  ),
                ),
                SizedBox(
                  height: 10,
                ),
                Center(
                  child: Text(
                    '$currentScore',
                    style: TextStyle(fontSize: 30, fontWeight: FontWeight.bold),
                  ),
                )
              ],
            ),
          ),
        ),
      ),
    );
  }
}
